name: Release Drafter
on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    env:
      IG_REL_VER: 3.4.5

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set Env
        run: |
          touch .env
          echo MYBRANCH=${{ github.ref }} >> .env
          echo MYBRANCH is ${MYBRANCH}
          echo env.MYBRANCH is ${{ env.MYBRANCH }}
          echo env.IG_REL_VER is ${{ env.IG_REL_VER }}

      - name: Runner Info
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß Now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé Branch is ${{ github.ref }} ${{ github.repository }} repo"
          echo "üí° The ${{ github.repository }} repo has been cloned to the runner."
          echo "The event_name is ${{ github.event_name }}"
          echo "The event.pull_request.merged is ${{ github.event.pull_request.merged}}"
          echo "The ref is ${{ github.ref }}"
          echo "The base_ref is ${{ github.base_ref }}"
          echo "The head_ref is ${{ github.head_ref }}"
          npm install
          npm run set_release_version_1
          npm run set_release_version_2
          echo env.IG_RELEASE_VERION_1 is ${{ env.IG_RELEASE_VERSION_1 }}
          echo IG_RELEASE_VERION_1 is $IG_RELEASE_VERSION_1
          echo env.IG_RELEASE_VERION_2 is ${{ env.IG_RELEASE_VERSION_2 }}
          echo IG_RELEASE_VERION_2 is $IG_RELEASE_VERSION_2

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          config-name: ReleaseDrafterConfig.yml
          disable-autolabeler: true
          version: ${{ env.IG_REL_VER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
