name: Release Artifacts
on:
  release:
    branches:
      - master
    tags:
      - "*"
    types:
      - created
      
jobs:
  release-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Dump Env VARIABLES
        run: env | sort

      - name: Dump Github Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

#      - name: Upload Assets to Release (full-ig-zip))
#        uses: csexton/release-asset-action@v2
#        with:
#          release-url: ${{ github.event.release.upload_url }}         
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          files: |
#            build/output/full-ig.zip
#            build/output/
#          pattern: "build/output/*.jar"

#      - name: Upload Assets to Release (snapshot jar))
#        uses: csexton/release-asset-action@v2
#        with:
#          release-url: ${{ github.event.release.upload_url }}         
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          pattern: "build/output/*.jar"

#      - name: Upload Assets to Release with a file list
#        uses: csexton/release-asset-action@v2
#        with:
#          release-url: ${{ github.event.release.upload_url }}         
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          files: |
#            build/output/package.tgz
#            build/output/definitions.json.zip
#            build/output/examples.json.zip
#            build/ouptut/definitions.xml.zip
#            build/ouptut/examples.xml.zip
#            build/ouptut/definitions.ttl.zip
#          pattern: "build/output/*.jar"

      # Gren is used to update ReleaseNotes.md and release note comments (based on closed issues since last release)
      # Issue tags are used to control sections
      # Gren configuration is stored in .grenrc.js
      # See https://github.com/github-tools/github-release-notes for more details
      - name: Update release notes (gren)
        env:
            GREN_GITHUB_TOKEN=${{ secrets.GREN_GITHUB_TOKEN }}
        run: |
            npm install github-release-notes -g
            gren changelog --override 
            git commit -am "Github action - gren updated RealeasNotes.md on release {{ github.event.release.tag_name }}" 
            gren release --tags=${{ github.event.release.tag_name }} --override

